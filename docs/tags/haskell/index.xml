<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Haskell on M42</title>
    <link>/tags/haskell/</link>
    <description>Recent content in Haskell on M42</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 28 Aug 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/haskell/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Try mikrokosmos!</title>
      <link>/2017/08/28/try-mikrokosmos/</link>
      <pubDate>Mon, 28 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/08/28/try-mikrokosmos/</guid>
      <description>.CodeMirror { border: 1px solid #eee; height: auto; overflow-y: hidden; } .CodeMirror-scroll { height: auto; overflow-y: hidden; overflow-x: auto; } .mikrojs-console { height: auto; } pre { box-shadow: 0px 0px 1px #eee; }  Thanks to GHCJS and Codemirror, you can now try the Mikrokosmos lambda interpreter in your browser. Press the evaluate button below!
# Lambda expressions are written with \ or λ, as in (λx.</description>
    </item>
    
    <item>
      <title>Mikrokosmos 0.3.0</title>
      <link>/2017/07/22/mikrokosmos-0.3.0/</link>
      <pubDate>Sat, 22 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/07/22/mikrokosmos-0.3.0/</guid>
      <description>Mikrokosmos version 0.3.0 is out! This version comes bundled with a Jupyter Notebook kernel, a tutorial on lambda calculus and specific modes for SKI combinators.
 GitHub repository. User&amp;rsquo;s guide. Jupyter kernel.  </description>
    </item>
    
    <item>
      <title>Mónadas</title>
      <link>/2016/12/24/m%C3%B3nadas/</link>
      <pubDate>Sat, 24 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/12/24/m%C3%B3nadas/</guid>
      <description>A monad is just a monoid in the category of endofunctors, what&amp;rsquo;s the problem?
&amp;#x2013; Philip Walder (apócrifa) en A Brief, Incomplete, and Mostly Wrong History of programming languages
 Prerrequisitos Este artículo requiere un conocimiento previo de Haskell, o al menos, de otro lenguaje de programación funcional. Puedes consultar nuestra introducción a Haskell con recursos para iniciarte en el lenguaje.
Por otro lado, para la segunda parte del artículo es recomendable conocimiento previo sobre teoría de categorías.</description>
    </item>
    
    <item>
      <title>Distribuciones discretas con mónadas</title>
      <link>/2016/12/10/distribuciones-discretas-con-m%C3%B3nadas/</link>
      <pubDate>Sat, 10 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/12/10/distribuciones-discretas-con-m%C3%B3nadas/</guid>
      <description>El modelo Como parte de una serie de ejemplos sobre uso de mónadas, he escrito un poco de código para modelar distribuciones discretas usando mónadas.
Por un lado, usa un generador congruencial lineal para generar números aleatorios; y por otro, usa la mónada State para pasar una semilla aleatoria de una función a otra que me permita seguir generado números aleatorios.
Por último, aporta un método que deriva Show para probar las distribuciones y dibujar un histograma de cualquiera de ella.</description>
    </item>
    
  </channel>
</rss>